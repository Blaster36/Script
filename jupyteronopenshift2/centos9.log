yum install -y epel-release epel-next-release
yum install -y --enablerepo=epel xrdp tigervnc-server
systemctl stop firewalld
systemctl disable firewalld
systemctl enable xrdp --now

yum install -y python3 python3-pip
yum groupinstall "GNOME Desktop"
yum install -y qemu-kvm libvirt libvirt-client virt-install virt-manager bridge-utils NetworkManager

echo 'alias ll="ls -alhF --color=auto"' >> ~/.bashrc
source ~/.bashrc

tar xvf crc-linux-amd64.tar.xz
mkdir -p ~/bin
cp ~/crc-linux-*-amd64/crc ~/bin
export PATH=$PATH:$HOME/bin
echo 'export PATH=$PATH:$HOME/bin' >> ~/.bashrc
source ~/.bashrc

crc version
crc config set cpus 4
crc config set memory 28672
crc config set disk-size 150
crc config set pull-secret-file ~/pull-secret.txt
crc config view
crc setup

crc start
###
Started the OpenShift cluster.

The server is accessible via web console at:
  https://console-openshift-console.apps-crc.testing

Log in as administrator:
  Username: kubeadmin
  Password: EFWZB-XTKEI-E63Cx-DjVjd

Log in as user:
  Username: developer
  Password: developer

Use the 'oc' command line interface:
  $ eval $(crc oc-env)
  $ oc login -u developer https://api.crc.testing:6443
###

crc ip
ssh -i ~/.crc/machines/crc/id_ecdsa core@192.168.130.11
qemu-img info ~/.crc/cache/crc_libvirt_4.17.3_amd64/crc.qcow2
###
image: /home/thanatos/.crc/cache/crc_libvirt_4.17.3_amd64/crc.qcow2
file format: qcow2
virtual size: 31 GiB (33285996544 bytes)
disk size: 18.6 GiB
cluster_size: 65536
Format specific information:
    compat: 1.1
    compression type: zlib
    lazy refcounts: true
    refcount bits: 16
    corrupt: false
    extended l2: false
Child node '/file':
    filename: /home/thanatos/.crc/cache/crc_libvirt_4.17.3_amd64/crc.qcow2
    protocol type: file
    file length: 18.6 GiB (19965280256 bytes)
    disk size: 18.6 GiB
###

yum install -y rpcbind nfs-utils
mkdir -p /var/share/nfs

cat /etc/exports
echo '/var/share/nfs 192.168.68.0/24(rw,sync,no_subtree_check,insecure,no_root_squash) 192.168.130.0/24(rw,sync,no_subtree_check,insecure,no_root_squash)' >> /etc/exports
cat /etc/exports

exportfs -ra
exportfs -v

systemctl start rpcbind
systemctl start nfs-server
systemctl start nfs-lock
systemctl start nfs-idmap
systemctl enable nfs-server

ssh -i /home/thanatos/.crc/machines/crc/id_ecdsa core@192.168.130.11
mkdir -p /mnt/nfs
mount -t nfs 192.168.68.19:/var/share/nfs /mnt/nfs
umount /mnt/nfs

mkdir -p /var/share/nfs/dir-admin
mkdir -p /var/share/nfs/dir-jupyter
mkdir -p /var/share/nfs/dir-sharedrwx
mkdir -p /var/share/nfs/jupyterhub-db
chmod 777 /var/share/nfs/dir-admin
chmod 777 /var/share/nfs/dir-jupyter
chmod 777 /var/share/nfs/dir-sharedrwx
chmod 777 /var/share/nfs/jupyterhub-db

# Login to OpenShift
eval $(crc oc-env)
oc login -u kubeadmin -p EFWZB-XTKEI-E63Cx-DjVjd https://api.crc.testing:6443

# Creating Project.
oc new-project jupyter

# Creating ServiceAccount.
oc create serviceaccount jupyter -n jupyter
oc adm policy add-role-to-user edit -z jupyter -n jupyter
oc adm policy add-scc-to-user anyuid -z jupyter -n jupyter

# Creating PV for jupyterhub-db.
oc apply -f jupyterhub-deployer_pv.json

# Creating PV and PVC for users.
oc apply -f jupyterhub_pv_admin.json
oc apply -f jupyterhub_pv_jupyter.json
oc apply -f jupyterhub_pv_sharedrwx.json
oc apply -f jupyterhub_pvc_admin.json
oc apply -f jupyterhub_pvc_jupyter.json
oc apply -f jupyterhub_pvc_sharedrwx.json

# Creating Template.
oc apply -f jupyterhub-deployer_template.json

# Check Status.
oc get pv,pvc,template

# Pull ContainerImages.
podman pull quay.io/jupyteronopenshift/jupyterhub:3.4.0
podman pull postgres:9.6
podman pull quay.io/jupyteronopenshift/s2i-minimal-notebook-py36:2.5.1
podman pull quay.io/thoth-station/s2i-minimal-py38-notebook:v0.5.1
podman pull jupyter/pyspark-notebook:python-3.8

# Creating ImageStreams.
oc whoami -t | podman login -u kubeadmin --password-stdin https://default-route-openshift-image-registry.apps-crc.testing:443 --tls-verify=false
podman tag quay.io/jupyteronopenshift/jupyterhub:3.4.0 default-route-openshift-image-registry.apps-crc.testing:443/jupyter/jupyterhub:3.4.0
podman tag postgres:9.6 default-route-openshift-image-registry.apps-crc.testing:443/jupyter/postgres:9.6
podman tag quay.io/jupyteronopenshift/s2i-minimal-notebook-py36:2.5.1 default-route-openshift-image-registry.apps-crc.testing:443/jupyter/s2i-minimal-notebook-py36:2.5.1
podman tag quay.io/thoth-station/s2i-minimal-py38-notebook:v0.5.1 default-route-openshift-image-registry.apps-crc.testing:443/jupyter/s2i-minimal-py38-notebook:v0.5.1
podman tag jupyter/pyspark-notebook:python-3.8 default-route-openshift-image-registry.apps-crc.testing:443/jupyter/pyspark-notebook:python-3.8
podman push default-route-openshift-image-registry.apps-crc.testing:443/jupyter/jupyterhub:3.4.0 --tls-verify=false
podman push default-route-openshift-image-registry.apps-crc.testing:443/jupyter/postgres:9.6 --tls-verify=false
podman push default-route-openshift-image-registry.apps-crc.testing:443/jupyter/s2i-minimal-notebook-py36:2.5.1 --tls-verify=false
podman push default-route-openshift-image-registry.apps-crc.testing:443/jupyter/s2i-minimal-py38-notebook:v0.5.1 --tls-verify=false
podman push default-route-openshift-image-registry.apps-crc.testing:443/jupyter/pyspark-notebook:python-3.8 --tls-verify=false
podman logout https://default-route-openshift-image-registry.apps-crc.testing:443

# Check Status.
oc get is

# JupyterHub Error
## UI
Error: '<' not supported between instances of 'datetime.datetime' and 'float' 

## Pod's Log
File "/opt/app-root/lib/python3.6/site-packages/kubespawner/spawner.py", line 73, in events
key=lambda x: x.last_timestamp if x.last_timestamp is not None else 0.,
TypeError: '<' not supported between instances of 'datetime.datetime' and 'float'

## Copy File
kubectl cp -n jupyter <pod name>:/path/to/file /path/to/local/file
oc rsync jupyterhub-2-7hpm5:/opt/app-root/lib/python3.6/site-packages/kubespawner/spawner.py ./

## L.73 SourceCode
key=lambda x: x.last_timestamp if x.last_timestamp is not None else 0.,
